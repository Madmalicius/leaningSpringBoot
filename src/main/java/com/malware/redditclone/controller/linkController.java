package com.malware.redditclone.controller;

import java.util.List;
import java.util.Optional;

import com.malware.redditclone.domain.link;
import com.malware.redditclone.repositories.linkRepository;

import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestMapping;

@Controller
@RequestMapping("/links")
public class linkController {

    private linkRepository linkRepo;

    public linkController(linkRepository linkRepo) {
        this.linkRepo = linkRepo;
    }


    // list
    @GetMapping("/")
    public List<link> list() {
        return linkRepo.findAll();
    }

    // CRUD

    @GetMapping("/foo")
    public String foo(Model model) {
        model.addAttribute("pageTitle", "Foo Bar");
        return "foo";
    }

    @PostMapping("/create")
    public link create(@ModelAttribute link link) {
        return linkRepo.save(link);
    }

    @GetMapping("/{id}")
    public Optional<link> read(@PathVariable Long id) {
        return linkRepo.findById(id);
    }

    @PutMapping("/{id}")
    public link update(@PathVariable Long id, @ModelAttribute link link) {
        return linkRepo.save(link);
    }

    @DeleteMapping("/{id}")
    public void delete(@PathVariable Long id) {
        linkRepo.deleteById(id);
    }
}
