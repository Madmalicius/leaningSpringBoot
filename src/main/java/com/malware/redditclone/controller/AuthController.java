package com.malware.redditclone.controller;

import com.malware.redditclone.domain.RedditUser;
import com.malware.redditclone.service.RedditUserService;

import org.springframework.security.core.context.SecurityContextHolder;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;

@Controller
public class AuthController {

    private RedditUserService userService;

    public AuthController(RedditUserService userService) {
        this.userService = userService;
    }

    @GetMapping("/login")
    public String login(){
        return "auth/login";
    }

    @GetMapping("/register")
    public String register(){
        return "auth/register";
    }

    @GetMapping("/profile")
    public String profile(Model model){
        // List<Link> userLinks = userService.getLinks(((RedditUser) SecurityContextHolder.getContext().getAuthentication().getPrincipal()).getUsername());
        // System.out.println(userLinks);
        // model.addAttribute("links", userLinks);
        System.out.println((RedditUser) SecurityContextHolder.getContext().getAuthentication().getPrincipal());
        if ((RedditUser) SecurityContextHolder.getContext().getAuthentication().getPrincipal() == null) {
            return "redirect:/";
        } else {
            RedditUser user = userService.getActiveUser();
            model.addAttribute("user", user);
            return "auth/profile";
        }
    }

}
